//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DailyPlanner.com.cobbnz.weather {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="clsWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class clsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCurrentConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentConditionsExtraOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentConditionsAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public clsWebService() {
            this.Url = global::DailyPlanner.Properties.Settings.Default.DailyPlanner_com_cobbnz_weather_clsWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCurrentConditionsCompletedEventHandler GetCurrentConditionsCompleted;
        
        /// <remarks/>
        public event GetCurrentConditionsExtraCompletedEventHandler GetCurrentConditionsExtraCompleted;
        
        /// <remarks/>
        public event GetCurrentConditionsAsXMLCompletedEventHandler GetCurrentConditionsAsXMLCompleted;
        
        /// <remarks/>
        public event GetForecastCompletedEventHandler GetForecastCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentConditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrentConditions(string WeatherDataURL) {
            object[] results = this.Invoke("GetCurrentConditions", new object[] {
                        WeatherDataURL});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentConditionsAsync(string WeatherDataURL) {
            this.GetCurrentConditionsAsync(WeatherDataURL, null);
        }
        
        /// <remarks/>
        public void GetCurrentConditionsAsync(string WeatherDataURL, object userState) {
            if ((this.GetCurrentConditionsOperationCompleted == null)) {
                this.GetCurrentConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentConditionsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentConditions", new object[] {
                        WeatherDataURL}, this.GetCurrentConditionsOperationCompleted, userState);
        }
        
        private void OnGetCurrentConditionsOperationCompleted(object arg) {
            if ((this.GetCurrentConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentConditionsCompleted(this, new GetCurrentConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentConditionsExtra", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrentConditionsExtra(string WeatherDataURL) {
            object[] results = this.Invoke("GetCurrentConditionsExtra", new object[] {
                        WeatherDataURL});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentConditionsExtraAsync(string WeatherDataURL) {
            this.GetCurrentConditionsExtraAsync(WeatherDataURL, null);
        }
        
        /// <remarks/>
        public void GetCurrentConditionsExtraAsync(string WeatherDataURL, object userState) {
            if ((this.GetCurrentConditionsExtraOperationCompleted == null)) {
                this.GetCurrentConditionsExtraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentConditionsExtraOperationCompleted);
            }
            this.InvokeAsync("GetCurrentConditionsExtra", new object[] {
                        WeatherDataURL}, this.GetCurrentConditionsExtraOperationCompleted, userState);
        }
        
        private void OnGetCurrentConditionsExtraOperationCompleted(object arg) {
            if ((this.GetCurrentConditionsExtraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentConditionsExtraCompleted(this, new GetCurrentConditionsExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentConditionsAsXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentConditionsAsXML(string WeatherDataURL) {
            object[] results = this.Invoke("GetCurrentConditionsAsXML", new object[] {
                        WeatherDataURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentConditionsAsXMLAsync(string WeatherDataURL) {
            this.GetCurrentConditionsAsXMLAsync(WeatherDataURL, null);
        }
        
        /// <remarks/>
        public void GetCurrentConditionsAsXMLAsync(string WeatherDataURL, object userState) {
            if ((this.GetCurrentConditionsAsXMLOperationCompleted == null)) {
                this.GetCurrentConditionsAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentConditionsAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetCurrentConditionsAsXML", new object[] {
                        WeatherDataURL}, this.GetCurrentConditionsAsXMLOperationCompleted, userState);
        }
        
        private void OnGetCurrentConditionsAsXMLOperationCompleted(object arg) {
            if ((this.GetCurrentConditionsAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentConditionsAsXMLCompleted(this, new GetCurrentConditionsAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForecast", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetForecast() {
            object[] results = this.Invoke("GetForecast", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastAsync() {
            this.GetForecastAsync(null);
        }
        
        /// <remarks/>
        public void GetForecastAsync(object userState) {
            if ((this.GetForecastOperationCompleted == null)) {
                this.GetForecastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastOperationCompleted);
            }
            this.InvokeAsync("GetForecast", new object[0], this.GetForecastOperationCompleted, userState);
        }
        
        private void OnGetForecastOperationCompleted(object arg) {
            if ((this.GetForecastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastCompleted(this, new GetForecastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCurrentConditionsCompletedEventHandler(object sender, GetCurrentConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCurrentConditionsExtraCompletedEventHandler(object sender, GetCurrentConditionsExtraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentConditionsExtraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentConditionsExtraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCurrentConditionsAsXMLCompletedEventHandler(object sender, GetCurrentConditionsAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentConditionsAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentConditionsAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetForecastCompletedEventHandler(object sender, GetForecastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591